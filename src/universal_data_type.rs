// Universal data types from https://en.wikipedia.org/wiki/X.690#BER_encoding
#[derive(Debug, PartialEq, Clone)]
#[repr(u8)]
pub enum UniversalDataType {
    EndOfContent = 0,
    Boolean = 1,
    Integer = 2,
    BitString = 3,
    OctetString = 4,
    Null = 5,
    ObjectIdentifier = 6,
    ObjectDescriptor = 7,
    External = 8,
    Real = 9,
    Enumerated = 10,
    EmbeddedPDV = 11,
    UTF8String = 12,
    Relative = 13,
    Reserved = 14,
    Reserved2 = 15,
    Sequence = 16,
    Set = 17,
    NumericString = 18,
    PrintableString = 19,
    T61String = 20,
    VideotexString = 21,
    IA5String = 22,
    UTCTime = 23,
    GeneralizedTime = 24,
    GraphicString = 25,
    VisibleString = 26,
    GeneralString = 27,
    UniversalString = 28,
    CharacterString = 29,
    BMPString = 30,
}

impl From<u8> for UniversalDataType {
    fn from(value: u8) -> Self {
        match value {
            0 => Self::EndOfContent,
            1 => Self::Boolean,
            2 => Self::Integer,
            3 => Self::BitString,
            4 => Self::OctetString,
            5 => Self::Null,
            6 => Self::ObjectIdentifier,
            7 => Self::ObjectDescriptor,
            8 => Self::External,
            9 => Self::Real,
            10 => Self::Enumerated,
            11 => Self::EmbeddedPDV,
            12 => Self::UTF8String,
            13 => Self::Relative,
            14 => Self::Reserved,
            15 => Self::Reserved2,
            16 => Self::Sequence,
            17 => Self::Set,
            18 => Self::NumericString,
            19 => Self::PrintableString,
            20 => Self::T61String,
            21 => Self::VideotexString,
            22 => Self::IA5String,
            23 => Self::UTCTime,
            24 => Self::GeneralizedTime,
            25 => Self::GraphicString,
            26 => Self::VisibleString,
            27 => Self::GeneralString,
            28 => Self::UniversalString,
            29 => Self::CharacterString,
            30 => Self::BMPString,
            _ => panic!("lulz"),
        }
    }
}
